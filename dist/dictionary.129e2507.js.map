{"mappings":"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","sources":["public/dictionary.js"],"sourcesContent":["// Store html content areas as variables\nconst content = document.getElementById(\"searchResult\");\n\n// Variable for form\nconst form = document.getElementById(\"searchForm\")\n\n// Variable for input field (word being searched)\nconst inputField = document.getElementById(\"searchWord\")\n\n// Variable for submit button\nconst submitBtn = document.getElementById(\"submitWord\")\n\n// Create the request for data collection using API\nvar request = new XMLHttpRequest();\n\n\n\n\n//getData()\n\n\n\n// Create a function to handle the data loading\n// Running immediately on load because of .onload\n\n//function getData(){\n    \n    submitBtn.addEventListener(\"click\", function(){\n        content.innerHTML = \"\";\n        let wordInput = inputField.value;\n        //console.log(`https://api.dictionaryapi.dev/api/v2/entries/en/${wordInput}`)\n        request.open('GET', `https://api.dictionaryapi.dev/api/v2/entries/en/${wordInput}`);\n    \n        request.onload = function (){\n    \n            // Check the outcome of the request\n            if(request.status >= 200 && request.status < 400) {\n\n                // Create variable to store response data\n                let data = JSON.parse(this.response);\n\n                // Create an element for the heading (entered word)\n                let theWord = document.createElement('h2');\n\n                theWord.textContent = data[0].word;\n\n                content.appendChild(theWord)\n\n                // If successful, process the data\n                data.forEach(function(define){\n                    renderDefine(define)\n                });\n    \n                // Call function to display data as an object {Word, Definition, Synonyms}\n    \n            } else {\n                // If unsuccessful, inform user\n                console.log(\"API ERROR\")\n            }\n    }\n    \n    \n    // Send request to API server\n    request.send();\n\n    });\n\n   \n\n\n\n// Define function to display data\nfunction renderDefine(define){\n\n    // Empty array for synonyms to be pushed to\n    var synonymList = []\n    // For loop pushing synonyms into synonymList array\n    for(i=0 ; i<define.meanings[0].synonyms.length; i++){\n        synonymList.push(define.meanings[0].synonyms[i]);\n    }\n\n    // Create a div for the card\n    let card = document.createElement('div');\n    card.setAttribute('class', 'card');\n\n    // // Create an element for the heading (entered word)\n    // let theWord = document.createElement('h2');\n    // theWord.textContent = define.word;\n\n    // Create a smaller heading element for short definition\n    let theDefinition = document.createElement('h5');\n    theDefinition.textContent = define.meanings[0].definitions[0].definition;\n\n    // Create a paragraph element for synonyms\n    let theSynonyms = document.createElement('p');\n    theSynonyms.textContent = synonymList\n\n    // Append text elements to card div\n    // card.appendChild(theWord);\n    card.appendChild(theDefinition);\n    card.appendChild(theSynonyms);\n\n    // Append to content area\n    content.appendChild(card);\n\n}\n\n\n"],"names":[],"version":3,"file":"dictionary.129e2507.js.map","sourceRoot":"/__parcel_source_root/"}